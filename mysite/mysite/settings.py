"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=&xsws09cs7zxlp-oj%pi$-3b-i^w_i%2b(zs86p03*ls$_0@%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest',
    'rest_framework',
    'rest_framework.authtoken',#for token based auth
    'djoser', #this is the main library for rest auth
    'social_django', #this is for social authentication with djoser
    'rest_framework_simplejwt', #web token based jwt 
    'rest_framework_simplejwt.token_blacklist',#this is for unusual token blacklist like as disable something
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware', #for social auth errors and it required
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'template')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends', #something is here I used for social django
                'social_django.context_processors.login_redirect', #same
            ],
        },
    },
]

# auth backend 
AUTHENTICATION_BACKENDS = (
    'social_core.backends.google.GoogleOAuth2', #for google auth system install in my venv
    'social_core.backends.facebook.FacebookOAuth2', #for facebook
    'django.contrib.auth.backends.ModelBackend', #for implement my backend models to my admin page
)

# simple jwt
SIMPLE_JWT = {
    'AUTH_HEADER_TYPES': ('Bearer', 'JWT',),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'AUTH_TOKEN_CLASSES': (
        'rest_framework_simplejwt.tokens.AccessToken', #this is for providing tokens
        ),
}

WSGI_APPLICATION = 'mysite.wsgi.application'

# rest framework
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
    ),
}


# djoser webname settings
# DOMAIN = ('conf.com') #example.com needed when using frontend like vuejs
# SITE_NAME = ('confianza') #Example


#google auth keys
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '193835369636-lcqcpslifbpo6qkd9qoe81tba041dgce.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = 'DfkgYzoNywbrzwJbLnOPU26J'


# facebook app id,secret set up
SOCIAL_AUTH_FACEBOOK_KEY = '542331293372301'  # App ID
SOCIAL_AUTH_FACEBOOK_SECRET = '81dd79ad47daffe3a1e041abf1f8b431'  # App Secret

# scopes for geting data from facebook provided users
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'fields': 'email,first_name,last_name'
}
SOCIAL_AUTH_RAISE_EXCEPTIONS = False

# SOCIAL_AUTH_REDIRECT_IS_HTTPS = True  uncomment when publish

# scope and extra data for data fecting from google users
SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = ['https://www.googleapis.com/auth/userinfo.email',
                                'https://www.googleapis.com/auth/userinfo.profile',
                                    'openid']          
SOCIAL_AUTH_GOOGLE_OAUTH2_EXTRA_DATA = ['first_name', 'last_name']


redirect_urls = ['http://127.0.0.1:8000/google/','http://localhost:8000/facebook/']


# djoser settings
DJOSER = {
    'SET_PASSWORD_RETYPE': True,
    'LOGIN_FIELD': 'email',
    'Required': 'username',
    'user_create': 'ecomApi.serializers.UserCreateSerializer',
    'user': 'ecomApi.serializers.UserSerializer',
    'PASSWORD_RESET_CONFIRM_URL': 'password/reset/confirm/{uid}/{token}',
    'PASSWORD_CHANGED_EMAIL_CONFIRMATION': True,
    'SERIALIZERS': {},
    'SEND_CONFIRMATION_EMAIL': True,
    'ACTIVATION_URL': 'activate/{uid}/{token}',
    'SEND_ACTIVATION_EMAIL': True,
    'SOCIAL_AUTH_ALLOWED_REDIRECT_URIS': redirect_urls,
    'SOCIAL_AUTH_TOKEN_STRATEGY': 'djoser.social.token.jwt.TokenStrategy', #for providing token from social auth
}

AUTH_USER_MODEL = 'rest.User'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]
STATIC_ROOT = os.path.join(BASE_DIR, 'assets')


# Root EMAIL   SET UP HERE
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'thedramaclubz@gmail.com'
EMAIL_HOST_PASSWORD = 'rifat2015*'
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'thedramaclubz@gmail.com'

